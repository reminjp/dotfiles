# path
export PATH="$HOME/bin:$HOME/.local/bin:$PATH"

# Homebrew
export HOMEBREW_AUTO_UPDATE_SECS=86400 # Set the same as the default to suppress hints.
# M1 Mac
ls -A /Library/Developer/CommandLineTools/usr/bin &>/dev/null || xcode-select --install
type /opt/homebrew/bin/brew &>/dev/null && eval "$(/opt/homebrew/bin/brew shellenv)"
# Linux
[ -d '/home/linuxbrew/.linuxbrew/bin' ] && PATH="/home/linuxbrew/.linuxbrew/bin:$PATH"
[ -d "$HOME/.linuxbrew/bin" ] && PATH="$HOME/.linuxbrew/bin:$PATH"

# C++
# AtCoder Library
type ghq &>/dev/null && [ -d "$(ghq root)/github.com/atcoder/ac-library" ] &&
  export CPLUS_INCLUDE_PATH="$CPLUS_INCLUDE_PATH:$(ghq root)/github.com/atcoder/ac-library"

# Java
[ -d "$(brew --prefix openjdk)/bin" ] && PATH="$(brew --prefix openjdk)/bin:$PATH"
type /usr/libexec/java_home &>/dev/null && export JAVA_HOME="$(/usr/libexec/java_home)"

# JavaScript
# Deno
[ -d "$HOME/.deno/bin" ] && PATH="$HOME/.deno/bin:$PATH"

# Go
type go &>/dev/null && [ -d "$(go env GOPATH)/bin" ] &&
  PATH="$(go env GOPATH)/bin:$PATH"

# Rust
[ -f "$HOME/.cargo/env" ] && . "$HOME/.cargo/env"

# Ruby
[ -d "$HOME/.rbenv/bin" ] && PATH="$HOME/.rbenv/bin:$PATH"
type rbenv &>/dev/null && eval "$(rbenv init -)"

# Flutter
type ghq &>/dev/null && [ -d "$(ghq root)/github.com/flutter/flutter/bin" ] &&
  PATH="$(ghq root)/github.com/flutter/flutter/bin:$PATH"

# Android SDK
if [ -d "$HOME/Library/Android/sdk" ]; then
  export ANDROID_HOME="$HOME/Library/Android/sdk"
  PATH="$ANDROID_HOME/emulator:$PATH"
  PATH="$ANDROID_HOME/tools:$PATH"
  PATH="$ANDROID_HOME/tools/bin:$PATH"
  PATH="$ANDROID_HOME/platform-tools:$PATH"
fi

# Pipenv
export PIPENV_VENV_IN_PROJECT=1
export PIPENV_IGNORE_VIRTUALENVS=1

# Poetry
[ -d "$HOME/.poetry/bin" ] && PATH="$HOME/.poetry/bin:$PATH"
export POETRY_VIRTUALENVS_IN_PROJECT=true

# Python
[ -d "$(brew --prefix python)/libexec/bin" ] && PATH="$(brew --prefix python)/libexec/bin:$PATH"

# Google Cloud SDK
if [ -d "$(brew --prefix)/share/google-cloud-sdk" ]; then
  . "$(brew --prefix)/share/google-cloud-sdk/path.bash.inc"
  . "$(brew --prefix)/share/google-cloud-sdk/completion.bash.inc"
fi

# asdf
export ASDF_DATA_DIR="$HOME/.asdf"
PATH="$ASDF_DATA_DIR/shims:$(brew --prefix asdf)/bin:$PATH"
# Flutter
if type asdf &>/dev/null && asdf where flutter &>/dev/null; then
  export FLUTTER_ROOT="$(asdf where flutter)"
fi

# Yarn
if type yarn &>/dev/null; then
  yarn_global_path="$(yarn global bin)"
  [[ ":$PATH:" != *"$yarn_global_path"* ]] && PATH="$yarn_global_path:$PATH"
  unset yarn_global_path
fi

# Mac OS
if [ "$(uname)" = 'Darwin' ]; then
  # suppress the warning "The default interactive shell is now zsh."
  export BASH_SILENCE_DEPRECATION_WARNING=1

  # disable mouse acceleration (if necessary)
  should_re_login=false
  if [ "$(defaults read .GlobalPreferences com.apple.mouse.scaling)" != '-1' ]; then
    defaults write .GlobalPreferences com.apple.mouse.scaling -1
    should_re_login=true
  fi
  # if [ "$(defaults read .GlobalPreferences com.apple.scrollwheel.scaling)" != '-1' ]; then
  #   defaults write .GlobalPreferences com.apple.scrollwheel.scaling -1
  #   should_re_login=true
  # fi
  if $should_re_login; then
    echo "$(tput setaf 3)Warn:$(tput sgr0) Disabled mouse acceleration. Please re-login."
  fi
  unset should_re_login
fi

# WSL
if type cmd.exe &>/dev/null; then # is WSL
  # X server
  export DISPLAY=127.0.0.1:0.0
fi

if [ -n "$BASH_VERSION" ]; then
  if [ -f "$HOME/.bashrc" ]; then
    . "$HOME/.bashrc"
  fi
fi
